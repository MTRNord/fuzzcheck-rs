# Status

## Bugs

* the minimize command does not handle any special case
    * if the input file does not exist
    * if the input file is of complexity zero

* the command line app does not catch signals, so it can't tell
the user which file is the most minimized at the end. This may be
solved by only keeping the most minimal version of a file at any point,
or by catching signals and displaying a message

* all file errors are ignored, they should be displayed and explained
to the usere

* too much complexity, try to simplify stuff
    * much of the complexity is carried over from when I did not know
    what the fuzzer should support or how to do it best, but now I can 
    remove most of it

* I feel like the analyze function is too slow and I should rethink
how to handle the trace_cmp instruction

## Features

* support more kind of tracing
    * level 4
    * indir?
    * gep?

* build a cargo fuzzcheck tool that manages the fuzzcheck dependency automatically

* use clap to build a proper command line app with a good interface

* create default generators for most basic types

* support reading initial inputs from an input corpus

## Documentation

* there is none currently, but most of it can be ported from the Swift project
    * ensure it builds correctly with rust doc